# This is a basic workflow to help you get started with Actions

name: Deploy to GAE

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    name: Deploying to Google Cloud
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
   
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: 'projects/885475882644/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
        service_account: 'appengine-vivek@third-current-338811.iam.gserviceaccount.com'

      
    - shell: bash
      run: echo ${ACTIONS_ID_TOKEN_REQUEST_URL} > url.txt
    - shell: bash
      run: echo ${ACTIONS_ID_TOKEN_REQUEST_TOKEN} > token.txt
    - id: idtoken
      shell: bash
      run: |
          token=${ACTIONS_ID_TOKEN_REQUEST_TOKEN}
          runtimeUrl=${ACTIONS_ID_TOKEN_REQUEST_URL}
          runtimeUrl="${runtimeUrl}&audience=google-wlif"
          ID_TOKEN=$(curl -H "Authorization: bearer ${token}" ${runtimeUrl} | jq -r ".value")
          echo ::set-output name=idtoken::$ID_TOKEN
          echo $ID_TOKEN > idtoken.txt
          
    
    - id: sts_token
      shell: bash
      run: |
          STS_TOKEN=$(curl -0 -X POST https://sts.googleapis.com/v1/token \
              -H 'Content-Type: text/json; charset=utf-8' \
              -d @- <<EOF | jq -r .access_token
              {
                  "audience"           : "//iam.googleapis.com/projects/885475882644/locations/global/workloadIdentityPools/gh-pool/providers/gh-provider",
                  "grantType"          : "urn:ietf:params:oauth:grant-type:token-exchange",
                  "requestedTokenType" : "urn:ietf:params:oauth:token-type:access_token",
                  "scope"              : "https://www.googleapis.com/auth/cloud-platform",
                  "subjectTokenType"   : "urn:ietf:params:oauth:token-type:jwt",
                  "subjectToken"       : "${{steps.idtoken.outputs.idtoken}}"
              }
          EOF)
          echo $STS_TOKEN > sts_token.txt
          echo ::set-output name=sts_token::$STS_TOKEN
    - id: access_token
      shell: bash
      run: |
          ACCESS_TOKEN=$(curl -0 -X POST https://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/appengine-vivek@third-current-338811.iam.gserviceaccount.com:generateAccessToken \
              -H "Content-Type: text/json; charset=utf-8" \
              -H "Authorization: Bearer ${{ steps.sts_token.outputs.sts_token }}" \
              -d @- <<EOF | jq -r .accessToken
              {
                  "scope": [ "https://www.googleapis.com/auth/cloud-platform" ]
              }
          EOF)
          echo $ACCESS_TOKEN > access_token.txt
          echo ::set-output name=access_token::$ACCESS_TOKEN
          echo $ACCESS_TOKEN
          
    - name: 'Access secret'
      run: |-
          curl --request POST 'https://dialogflow.googleapis.com/v2/projects/third-current-338811/agent:restore' \
              --header "Authorization: Bearer ${{steps.sts_token.outputs.sts_token}}"
              --data '{"agentUri":"gs://dialogflowbucketmigration/FlightAssistant.zip"}' \
              --compressed



          
